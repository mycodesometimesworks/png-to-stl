---
- hosts: localhost
  vars:
    ansible_python_interpreter: /usr/bin/python3
    project_directory: "{{ playbook_dir }}"
    project_directories:
      - intake
      - processing
      - output
    ## resize units are in mm
    ## rotate units are in degrees
    ## if concerting directly from svg, input_png and output_pnm  are optional parameters      
    items_to_convert:
      # - input_png: intake/test_text.png
        # output_pnm: processing/test.pnm
        output_svg: processing/test.svg
        output_stl: output/test2.stl
        stl_height: .2
        object_outline_diameter: .1
        x_resize: 100
        y_resize: 0
        z_resize: .2
        z_rotate: 90
        # - input_png: intake/3278ffeb5174993f8c39ddb6ccecfb42.jpg
        #   output_pnm: processing/calvin_wakeup.pnm
        #   output_svg: processing/calvin_wakeup.svg
        #   output_stl: output/calvin_wakeup.stl
        #   stl_height: .2
        #   object_outline_diameter: .05
        #   x_resize: 0
        #   y_resize: 160
        #   z_resize: 0
        #   z_rotate: 90
    model_dpi: 300
  tasks:
  - name: create project directory
    file:
      path: "{{item}}"
      state: directory
    with_items: "{{project_directories}}"

  - name: convert png to pnm
    command:
      cmd: "convert {{project_directory}}/{{item.input_png}} {{item.output_pnm}}"
    with_items:
      - "{{ items_to_convert}}"
    when: item.input_png is defined

  - name: convert pnm to svg
    command:
      cmd: "potrace {{item.output_pnm}} -s -o {{project_directory}}/{{item.output_svg}}"
    with_items:
      - "{{ items_to_convert}}"
    when: item.output_pnm is defined

  - name: convert svg to stl
    command:
      cmd: "openscad -o {{item.output_stl}} -D 'model_height={{item.stl_height}}' -D 'object_outline_diameter={{item.object_outline_diameter}}' -D 'model_dpi={{model_dpi}}' -D 'model_path=\"{{item.output_svg}}\"' -D 'x_resize={{item.x_resize}}' -D 'y_resize={{item.y_resize}}' -D 'z_resize={{item.z_resize}}' -D 'z_rotate={{item.z_rotate}}'  svg_extrude.scad"
    with_items:
      - "{{ items_to_convert}}"
    when: item.output_svg is defined
